import { useQuery } from '@tanstack/react-query'
import axios from 'axios'
import Head from 'next/head'
import React, { useState } from 'react'
import { useSelector, useDispatch } from 'react-redux'
import { storeSelect1, storeSelect2, storeSelect3 } from '../slices/formSlice'
import { useAccount } from 'wagmi'

export default function Home() {

  const { address } = useAccount()

  // Try this later
  // const [name, photo] = useSelector(state => [state.user.name, state.user.photo])

  const cost = useSelector((state) => state.form.cost) // This works
  const val1 = useSelector((state) => state.form.value1) // This works too
  const val2 = useSelector((state) => state.form.value2) // This also works
  const val3 = useSelector((state) => state.form.value3) // Yay, this works too
  const dispatch = useDispatch()

  // Function for getting data from DB
  const getData = async () => {
    return axios
      .get("https://firestore.googleapis.com/v1/projects/ethlas-project/databases/(default)/documents/transactions?key=AIzaSyD1VnJDlndU8pE_I9zbOtfXxnMqTGTTxeo")
      .then((res) => {
        //const result = res.data.documents[0].fields.user_addr["stringValue"]
        const result = res.data.documents;
        console.log(result);
        return result;
      })
  }

  // Function for creating new document in DB
  const createDocument = async () => {
    axios.post("https://firestore.googleapis.com/v1/projects/ethlas-project/databases/(default)/documents/transactions", 
        { 
            fields: { 
                date:{ timestampValue: new Date() },
                is_bubbles: {integerValue: val1 },
                is_cream: {integerValue: val2 },
                tea_latte: {integerValue: val3 },
                total: {integerValue: cost },
                user_addr: {stringValue: address },
            } 
        }
        ).then(res => { 
            console.log("Document created") 
        })
  }

  // Used for querying Firestore
  const readTx = useQuery(["tx"], getData, {
    enabled: false,
  });

  return (
    <div>
      <Head>
        <title>B0BA3</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="grid place-items-center justify-center">
          <div className="grid grid-cols-1 gap-6 content-center max-w-screen-lg">

            <div className="mockup-code shadow-2xl">
              <pre data-prefix="1"><code>// Customize your own boba:</code></pre>
              <pre data-prefix="2" className="text-warning"><code>Foam: Yes($0.50) || No($0)</code></pre>
              <pre data-prefix="3" className="text-warning"><code>Base: Milk Tea($1.00) || Latte($1.50)</code></pre>
              <pre data-prefix="4" className="text-warning"><code>Boba: Yes($0.50) || No($0)</code></pre>
              <pre data-prefix="5" className="text-success"><code>Shakin' up your order!</code></pre>
            </div>

            <div className="card flex-shrink-0 w-full max-w-md shadow-2xl bg-base-100">
              <div className="card-body">
                <div className="form-control w-full max-w-md">
                  <label className="label">
                    <span className="label-text">Do you want cream?</span>
                  </label>
                  <select className="select select-bordered" 
                  onChange={(e) => { dispatch(storeSelect1(e.target.value)) }}
                  defaultValue=""
                  >
                    <option value="" disabled>-</option>
                    <option value="1">I WANT!</option>
                    <option value="0">No, thanks</option>
                  </select>
                </div>
                <div className="form-control w-full max-w-md">
                  <label className="label">
                    <span className="label-text">Tea or Latte?</span>
                  </label>
                  <select className="select select-bordered" 
                  onChange={(e) => { dispatch(storeSelect2(e.target.value)) }}
                  defaultValue="">
                    <option value="" disabled>-</option>
                    <option value="1">Tea la...</option>
                    <option value="0">Latte please</option>
                  </select>
                </div>
                <div className="form-control w-full max-w-md">
                  <label className="label">
                    <span className="label-text">Bubbles?</span>
                  </label>
                  <select className="select select-bordered" 
                  onChange={(e) => { dispatch(storeSelect3(e.target.value)) }}
                  defaultValue=""
                  >
                    <option value="" disabled>-</option>
                    <option value="1">Siao ah? Of course!</option>
                    <option value="0">Nope, tryna stay healthy</option>
                  </select>
                </div>
                <div className="stats shadow">
                  <div className="stat">
                    <div className="stat-title">Sub-total:</div>
                    <div className="stat-value">{cost} MATIC</div>
                  </div>
                </div>
                <div className="form-control mt-6">
                  <button className="btn btn-primary" onClick={()=>{createDocument()}}>Buy</button>
                </div>
              </div>
            </div>

            <button className="btn btn-ghost" onClick={() => { readTx.refetch() }}>
              View Transaction History
            </button>
            <div>
              {
                readTx.isSuccess ? 
                (<>Success!</>) : 
                (<>

                </>)
              }
            </div>
          </div>
        </div>
      </main>
    </div>
  )
}
